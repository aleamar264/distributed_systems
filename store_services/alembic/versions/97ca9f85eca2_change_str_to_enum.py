"""change str to enum

Revision ID: 97ca9f85eca2
Revises: 
Create Date: 2025-10-24 00:50:43.376311

"""
from collections.abc import Sequence

import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

from alembic import op

# revision identifiers, used by Alembic.
revision: str = '97ca9f85eca2'
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('inventory',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('sku', sa.VARCHAR(length=255), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('quantity', sa.INTEGER(), nullable=False),
    sa.Column('version', sa.INTEGER(), nullable=False),
    sa.Column('updated_at', sqlite.DATETIME(), nullable=False),
    sa.Column('last_synced_at', sqlite.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('sku')
    )
    op.create_index(op.f('ix_inventory_id'), 'inventory', ['id'], unique=True)
    op.create_table('products',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('sku', sa.VARCHAR(length=255), nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), nullable=False),
    sa.Column('price', sa.FLOAT(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_products_id'), 'products', ['id'], unique=True)
    op.create_index(op.f('ix_products_price'), 'products', ['price'], unique=False)
    op.create_index(op.f('ix_products_sku'), 'products', ['sku'], unique=True)
    op.create_table('pending_change',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('operation_id', sa.VARCHAR(length=255), nullable=False),
    sa.Column('inventory_id', sa.INTEGER(), nullable=False),
    sa.Column('sku', sa.VARCHAR(length=255), nullable=False),
    sa.Column('delta', sa.INTEGER(), nullable=False),
    sa.Column('local_version', sa.INTEGER(), nullable=False),
    sa.Column('central_version', sa.INTEGER(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), nullable=False),
    sa.Column('error', sa.Text(), nullable=True),
    sa.Column('created_at', sqlite.DATETIME(), nullable=False),
    sa.Column('updated_at', sqlite.DATETIME(), nullable=False),
    sa.ForeignKeyConstraint(['inventory_id'], ['inventory.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('operation_id')
    )
    op.create_index(op.f('ix_pending_change_id'), 'pending_change', ['id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_pending_change_id'), table_name='pending_change')
    op.drop_table('pending_change')
    op.drop_index(op.f('ix_products_sku'), table_name='products')
    op.drop_index(op.f('ix_products_price'), table_name='products')
    op.drop_index(op.f('ix_products_id'), table_name='products')
    op.drop_table('products')
    op.drop_index(op.f('ix_inventory_id'), table_name='inventory')
    op.drop_table('inventory')
    # ### end Alembic commands ###
